#!/usr/bin/env bash
# A usable configuration for various OS environments
# 
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2002-07-15
# Requires: bpm.utils
################################################################################

bash_plugin_load() {
    # variables
    hostnickname=${HOSTNAME%%.*}
    hostdomain=${HOSTNAME#*.}
    #  Korean
    bash_default_env LANG ko_KR.UTF-8
    bash_default_env LC_ALL $LANG
    bash_default_env LANGUAGE $LANG
    local uname=`uname`
    # platform specific settings
    case $uname in
        Darwin) # Mac OS X
            # XXX path_helper does not set MANPATH unless it was already in the env
            # XXX some say MANPATH in MacOS X >= 10.2 became deprecated, but
            # XXX you need it anyway to search for non-standrad places.
            : ${MANPATH:=}
            export MANPATH
            # XXX and since path_helper messes up with your PATH, let's preserve it
            local PATH_orig=$PATH
            eval `/usr/libexec/path_helper -s`
            PATH=$PATH_orig
            # some stuffs get installed on /usr/local
            bash_insert_path PATH /usr/local/sbin /usr/local/bin
            bash_insert_path MANPATH /usr/local/man /usr/local/share/man
            if type brew &>/dev/null; then
                # Prefer Homebrew (http://mxcl.github.com/homebrew/)
                local brewPrefix=`brew --prefix`
                bash_insert_path PATH "$brewPrefix"/sbin "$brewPrefix"/bin
                bash_insert_path MANPATH "$brewPrefix"/man "$brewPrefix"/share/man
                # prefer GNU coreutils to BSD ones
                if local coreutils_Cellar=$(brew --prefix coreutils 2>/dev/null); then
                    bash_insert_path PATH "$coreutils_Cellar/libexec/gnubin"
                    bash_insert_path MANPATH "$coreutils_Cellar/libexec/gnuman"
                fi
                # Use autojump if available
                if [[ -s "$brewPrefix"/etc/autojump.sh ]]; then
                    . "$brewPrefix"/etc/autojump.sh
                    PROMPT_COMMAND+=";" # XXX workaround
                fi
            elif [ -x /opt/local/bin/port ]; then
                # Paths for MacPorts (http://www.macports.org/)
                bash_insert_path PATH /opt/local/sbin /opt/local/libexec/gnubin /opt/local/bin
                bash_insert_path MANPATH /opt/local/man /opt/local/share/man
            fi
        ;;
    esac
    # add ~/bin to PATH
    bash_insert_path PATH ~/bin
}

bash_plugin_login() {
    # environment variables
    bash_default_env EDITOR vim
    bash_default_env PAGER less
    bash_default_env LESS "-XFRiMW" # --no-init --quit-if-one-screen --RAW-CONTROL-CHARS --ignore-case --LONG-PROMPT --HILITE_UNREAD
    env() { # sorted env
        if [[ $# -eq 0 ]]; then command env | LC_ALL=C sort --ignore-case; else command env "$@"; fi
    }
    eenv() { # change env with editor
        local t=$(mktemp -d ${TMPDIR:-/tmp}/eenv.XXXXXX)
        # snapshot the environment
        if [[ $# -gt 0 ]]; then
            local patt=$(printf '\|^[^=]*%q[^=]*=' "$@")
            env | grep -i -- "${patt#\\|}"
        else
            env
        fi | grep -v '^_=' >$t/env
        eenv_varnames() { sed 's/=.*//' | LC_ALL=C sort; }
        eenv_varnames <$t/env >$t/vars.old
        # open editor for it
        ${EDITOR:-vim} $t/env
        # and apply the changes to environment
        local name= value=
        while IFS="=" read -r name value; do
            [ x"${!name}" != x"$value" ] || continue
            export "$name"="$value"
            echo "$name=$value"
        done <$t/env
        # take care of variable removals
        eenv_varnames <$t/env >$t/vars.new
        LC_ALL=C comm -13 $t/vars.new $t/vars.old >$t/vars.unset
        while read -r name; do
            unset "$name"
            echo "unset $name"
        done <$t/vars.unset
        # cleanup
        unset eenv_varnames
        rm -rf $t
    }
    # some usability options
    # See-Also: http://wiki.bash-hackers.org/internals/shell_options
    shopt -s nocaseglob extglob \
             cdspell \
             cmdhist histappend histreedit lithist \
             #
    if ! [[ $BASH_VERSION < 4 ]]; then
        shopt -s globstar autocd checkjobs
        # Use menu-complete-backward (only in bash >= 4)
        # if Shift-TAB is already bound to something similar
        ! bind -s | grep -q -F '"\e[Z": "\e-1\C-i"' ||
            bind '"\e[Z": menu-complete-backward'
    else
        bash_default_alias .. "cd .."
    fi
    local uname=`uname`
    # ls on several platforms
    local ls_o=
    if ls --version 2>&1 | grep 'Free Software Foundation' >/dev/null; then
        # GNU ls
        ls_o="-F --color=auto"
        [ -n "$LS_COLORS" ] || eval "`dircolors -b 2>/dev/null`"
        # platform specific configs
        case $uname in
            CYGWIN*) ls_o="$ls_o --show-control-chars" ;;
        esac
    else
        # platform specific ls
        case $uname in
            *BSD|Darwin) ls_o="-FG" ;;
        esac
    fi
    bash_default_alias ls "ls $ls_o"
    # ls idioms
    bash_default_alias ll "ls -l"
    bash_default_alias la "ls -A"
    bash_default_alias lal "la -l"
    bash_default_alias lt "ls -t"
    bash_default_alias llt "ll -t"
    bash_default_alias lalt "lal -t"
    bash_default_alias laltr "lal -tr"
    # frequently used abbreviations
    bash_default_alias cp "cp -i"
    bash_default_alias mv "mv -i"
    bash_default_alias rm "rm -i"
    bash_default_alias -  "cd -"
    bash_default_alias dirs "dirs -p"
    # keep history clean and long enough
    # See: http://briancarper.net/blog/248/
    bash_add_prompt "history -a"
    bash_default HISTSIZE     1024
    bash_default HISTFILESIZE 102400
    bash_default HISTTIMEFORMAT '%m-%d %T  '
    bash_default HISTCONTROL erasedups
    bash_add_with_separator : HISTIGNORE \
        "&" "[bf]g" cd .. - \
        "l[salt]" lal llt lalt \
        #
    # ignore some annoying files when completing
    bash_add_with_separator : FIGNORE \
        .o "~" \
        .svn .git \
        .DS_Store \
        #
    # pstree is too long to type, make a smart alias
    if type pstree &>/dev/null && ! type pst &>/dev/null; then
        pst() {
            case "${1:-}" in
                -*)                    ;;
                [0-9]*) set -- -p "$@" ;;
                "")     set -- -p $$   ;;
                *)      set -- -s "$@" ;;
            esac
            pstree "$@"
        }
    fi
}

# vim:et:ts=8:sw=4:sts=4

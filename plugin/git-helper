#!/usr/bin/env bash
# Git aliases and etc.
#
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2012-06-13
# Requires: bpm.utils
################################################################################

bash_plugin_interactive() {
    bash_default_alias g    "git status --untracked=no"
    bash_default_alias G    "git status"
    bash_default_alias gd   "git diff --find-copies-harder"
    bash_default_alias gds  "gd --staged"
    bash_default_alias gD   "gd HEAD"
    bash_default_alias ga   "git add"
    bash_default_alias gau  "ga -u"
    bash_default_alias gl   "git log --decorate --graph"
    bash_default_alias gb   "git branch -v"
    bash_default_alias gc   "git checkout"
    bash_default_alias gcb  "gc -b"
    bash_default_alias gC   "git commit"
    bash_default_alias gCA  "gC --amend"
    bash_default_alias gp   "git pull"
    bash_default_alias gP   "git push"
    bash_default_alias gr   "git remote -v"
    bash_default_alias gru  "git remote update"
    bash_default_alias gR   "git rebase"
    bash_default_alias gRI  "gR -i"
    bash_default_alias gss  "git submodule summary"
    bash_default_alias gsu  "git submodule update --init"
    bash_default_alias gh   "hub browse"
    # launch Vim with fugitive :Gstatus
    bash_default_alias gg   '_git_dir=$(git rev-parse --git-dir) && vim "$_git_dir"/index'

    # a handy way to patch remote
    git-tether-remote() {
        (
        set -xeuo pipefail
        hostpath=$1; shift
        case $hostpath in
            (*:*) host=${hostpath%%:*} dir=${hostpath#*:};;
            (*) echo >&2 "$hostpath: host:path required"; false;;
        esac
        commit=$(git rev-parse HEAD)
        branch=$(git symbolic-ref --short HEAD)
        # TODO use a dedicated tether branch?
        git push -f "$host:$dir" HEAD
        git diff HEAD | ssh $host "
            set -eux
            cd $(printf %q "$dir")
            # TODO git stash any outstanding changes?
            git checkout -f $(printf %q "$branch")
            git reset --hard $commit
            $([[ $(git diff HEAD | wc -l) -eq 0 ]] || echo "
            git apply
            git diff --stat --color
            ")"
        )
    }
    bash_default_alias gt git-tether-remote

}

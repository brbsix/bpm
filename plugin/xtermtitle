#!/usr/bin/env bash
# xterm dynamic title support
# 
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2004-05-28
# Requires: bpm.defaults bpm.prompt-hooks environment
################################################################################

bash_plugin_load() {
    xtermtitle_postfix=
    bash_default xtermtitle_label ""
    bash_default xtermtitle_mac_terminal false
    # xterm's dynamic title for some terminal types
    case $TERM in
        xterm* | cygwin* | screen*)
        if [ -n "$TMUX" -o -n "$STY" ]; then
            # in tmux or screen we need not much details
            xtermtitle_postfix=
        else
            # plain terminal
            local tty=`tty`
            tty=${tty#/dev/}
            xtermtitle_postfix="$tty^$hostnickname"
        fi
        # Mac OS X Terminal.app's enhanced DnD support since Lion
        # See: http://www.macosxautomation.com/lion/terminal.html
        # See also: /private/etc/bashrc's update_terminal_cwd
        if [ x"$TERM_PROGRAM" = x"Apple_Terminal" -a "${TERM_PROGRAM_VERSION:-0}" -ge 297 ]; then
            xtermtitle_mac_terminal=true
            xtermtitle_mac_terminal_last_pwd=
            xtermtitle_mac_terminal_pwd_url=
            xtermtitle_mac_terminal_update() {
                local pwd=$1
                if [ x"$xtermtitle_mac_terminal_last_pwd" != x"$pwd" ]; then
                    local pwd_url=
                    case $pwd in
                        "")
                            ;;
                        *)
                            pwd_url="file://$HOSTNAME$pwd";
                            # URL escaping from command-line: http://stackoverflow.com/questions/296536/urlencode-from-a-bash-script
                            pwd_url=$(perl -MURI::Escape -e 'print uri_escape($ARGV[0],"^[:alpha:][:digit:]\-\._~:/");' "$pwd_url")
                            ;;
                    esac
                    xtermtitle_mac_terminal_last_pwd=$pwd
                    xtermtitle_mac_terminal_pwd_url=$pwd_url
                    # display URL for the title bar icon
                fi
                printf '\e]7;%s\a' "$xtermtitle_mac_terminal_pwd_url"
            }
        fi
        # xterm title controller
        title() {
            xtermtitle_label=$*
            if $xtermtitle_mac_terminal; then
                # Apple Terminal.app
                case $xtermtitle_label in
                    "")
                        xtermtitle_update_title_icon() {
                            xtermtitle_mac_terminal_update "$PWD"
                            local path=$PWD
                            local name=${path##*/}
                            local dir=${PWD/#$HOME/"~"}
                            dir=${dir%/$name}
                            title="(${dir:-/})"
                            #title+=${xtermtitle_postfix:+ - $xtermtitle_postfix}
                            icon=$xtermtitle_postfix
                            # TODO show name and dir only when the tab bar is shown
                            # local showtabbar=$(defaults read com.apple.Terminal ShowTabBar)
                            # local nrtabs=$(osascript -e 'tell application "Terminal" to number of tabs of front window')
                            # TODO can we cache $nrtabs results? check every ??s or ??times
                            # [ $nrtabs -gt 1 -o $showtabbar = 1 ] || return
                            # icon="${name:-/} - ${title}"
                        }
                        ;;
                    *)
                        xtermtitle_update_title_icon() {
                            xtermtitle_mac_terminal_update ""
                            title=$(eval echo "$xtermtitle_label")
                            #title+=${xtermtitle_postfix:+ - $xtermtitle_postfix}
                        }
                        ;;
                esac
            else
                # Default behavior
                case $xtermtitle_label in
                    "")
                        xtermtitle_update_title_icon() {
                            local path=$PWD
                            local name=${path##*/}
                            local dir=${PWD/#$HOME/"~"}
                            dir=${dir%/$name}
                            title+="${name:-/} - "
                            title+="(${dir:-/})"
                            title+=${xtermtitle_postfix:+ - $xtermtitle_postfix}
                        }
                        ;;
                    *)
                        xtermtitle_update_title_icon() {
                            title=$(eval echo "$xtermtitle_label")
                            #title+=${xtermtitle_postfix:+ - $xtermtitle_postfix}
                        }
                        ;;
                esac
            fi
        }
        # xterm title updater
        xtermtitle() {
            local title= icon=
            xtermtitle_update_title_icon
            # display both: title and icon string
            printf '\e]0;%s\a' "$title"
            # then override icon string if necessary
            [ -z "$icon" ] || printf '\e]1;%s\a' "$icon"
        }
        # use default if necessary
        title "$xtermtitle_label"
        # register it
        bash_add_prompt xtermtitle
        ;;
    esac
}

# vim:et:ts=8:sw=4:sts=4
